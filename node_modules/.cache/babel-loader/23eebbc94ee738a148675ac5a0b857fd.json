{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\James\\\\Documents\\\\Projets\\\\superchat\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nfirebase.initializeApp({\n  apiKey: \"AIzaSyA8ybayc6aaMmcv2SndZN13G80EEL7Kwns\",\n  authDomain: \"superchat-3696f.firebaseapp.com\",\n  databaseURL: \"https://superchat-3696f.firebaseio.com\",\n  projectId: \"superchat-3696f\",\n  storageBucket: \"superchat-3696f.appspot.com\",\n  messagingSenderId: \"559024691852\",\n  appId: \"1:559024691852:web:dabb25f44f7aed0e28b9a9\",\n  measurementId: \"G-N5J8HS1KZG\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: user ? /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \"Sign in with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SignIn;\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => auth.signOut(),\n    children: \"Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SignOut;\n\nfunction ChatRoom() {\n  _s2();\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n      message: msg\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 40\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ChatRoom, \"O0dyPdqNWV0yO5QBetp+6dw5Oyk=\", false, function () {\n  return [useCollectionData];\n});\n\n_c4 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid\n  } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n}\n\n_c5 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"ChatRoom\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"sources":["C:/Users/James/Documents/Projets/superchat/src/App.js"],"names":["React","firebase","useAuthState","useCollectionData","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","user","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limit","messages","idField","map","msg","id","ChatMessage","props","text","uid","message","messageClass"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyA8ybayc6aaMmcv2SndZN13G80EEL7Kwns\",\n    authDomain: \"superchat-3696f.firebaseapp.com\",\n    databaseURL: \"https://superchat-3696f.firebaseio.com\",\n    projectId: \"superchat-3696f\",\n    storageBucket: \"superchat-3696f.appspot.com\",\n    messagingSenderId: \"559024691852\",\n    appId: \"1:559024691852:web:dabb25f44f7aed0e28b9a9\",\n    measurementId: \"G-N5J8HS1KZG\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        \n      </header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn/>}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn(){\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return(\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n\n  )\n}\n\nfunction ChatRoom(){\n  \n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  return (\n    <div>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n    </div>\n    \n  );\n}\n\nfunction ChatMessage(props){\n  const {text, uid} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return <p>{text}</p>\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}